---
import Notifications from "./user/Notifications.astro";
import Notification from './user/Notification.astro';
import Movements from './user/Movements.astro';
import Movement from './user/Movement.astro';
import Configurations from './user/Configurations.astro';

interface Props{
[x: string]: any;
    href_image: string;
    href_signin: string;
    href_signup: string;

    registrarse_text: string;
    iniciar_text: string;
    isGoogle: boolean;
}

const {href_image, href_signin, href_signup, registrarse_text, iniciar_text, isGoogle} = Astro.props;

let response_data_user: Response;
let response_user_exist: Response;

let data_user_exist: any;
let data_user: any;

let isContinue = true;
let err: any;

const id_user = (Astro.cookies.get("ID-USER") || {})?.value;
const initiated = (Astro.cookies.get("W-INIT-ENT") || {})?.value;

try{
    if(initiated != "false"){
        response_user_exist = await fetch(`http://localhost:4000/user/exists?id_user=${id_user}`);
        data_user_exist = await response_user_exist.json();

        if(data_user_exist.state == "Good Request"){
            response_data_user = await fetch(`http://localhost:4000/user/data?id_user=${id_user}`);
            data_user = await response_data_user.json();
        }else{
            throw new Error("Error in the request to the server");
        }
    }
}catch(e){
    isContinue = false;
    err = e;
}

---

{
    isContinue ? (
        <header class="fixed w-screen h-20 flex flex-col justify-center items-center">
            <div id="content-header" class="w-full max-w-7xl max-xl:px-5 max-md:gap-y-5 grid py-2 z-15 bg-transparent">
                <a href={href_image} class="flex justify-left items-center cursor-pointer w-full">
                    <img src="../../public/icons/logo-nobackground-best.png" class="w-16 h-16 max-[380px]:w-12 max-[380px]:h-12">
                </a>
            
                <div class="flex gap-x-5 justify-end items-center px-3">
            
                    <div class="flex items-center justify-center gap-x-5">

                        {
                            initiated == "false" ? (
                                <a href={href_signin} class="text-white bg-gray-800 hover:bg-gray-900 focus:outline-none focus:ring-4 focus:ring-gray-300 font-medium rounded-md text-sm px-5 py-2.5 dark:bg-gray-800 dark:hover:bg-gray-700 dark:focus:ring-gray-700 dark:border-gray-700">
                                    
                                    <span class="max-lg:hidden">
                                        {iniciar_text}
                                    </span>
                    
                                    <span class="lg:hidden">
                                        <svg class="icon icon-tabler icon-tabler-login-2" width="24" height="24" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                            <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                                            <path d="M9 8v-2a2 2 0 0 1 2 -2h7a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-7a2 2 0 0 1 -2 -2v-2" />
                                            <path d="M3 12h13l-3 -3" />
                                            <path d="M13 15l3 -3" />
                                        </svg>
                                    </span>
                                </a>

                                <a href={href_signup} class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-md text-sm px-5 py-2.5 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800">
                                    <span class="max-lg:hidden">
                                        {registrarse_text}
                                    </span>
                    
                                    <span class="lg:hidden">
                                        <svg class="icon icon-tabler icon-tabler-user-plus" width="24" height="24" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                            <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                                            <path d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0" />
                                            <path d="M16 19h6" />
                                            <path d="M19 16v6" />
                                            <path d="M6 21v-2a4 4 0 0 1 4 -4h4" />
                                        </svg>
                                    </span>
                                </a>
                            ) : (
                                <div class="relative">            
                                    <span id="button_config"  class="relative cursor-pointer bg-gray-800 hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-300 font-medium rounded-md text-sm px-5 py-2.5 flex w-full h-full">
                                        <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="white"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-settings-2">
                                            <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                                            <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
                                            <path d="M12 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
                                        </svg>
                                    </span>
                                </div>

                                <div class="relative">            
                                    <span id="button-notifications" class="relative cursor-pointer bg-gray-800 hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-300 font-medium rounded-md text-sm px-5 py-2.5 flex w-full h-full">

                                        <svg id="point_red" xmlns="http://www.w3.org/2000/svg"  width="7"  height="7"  viewBox="0 0 24 24"  fill="tomato"  class="absolute hidden translate-x-[1.1rem] icon icon-tabler icons-tabler-filled icon-tabler-circle">
                                            <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                                            <path d="M7 3.34a10 10 0 1 1 -4.995 8.984l-.005 -.324l.005 -.324a10 10 0 0 1 4.995 -8.336z" />
                                        </svg>

                                        <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="white"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="relative icon icon-tabler icons-tabler-outline icon-tabler-bell">
                                            <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                                            <path d="M10 5a2 2 0 1 1 4 0a7 7 0 0 1 4 6v3a4 4 0 0 0 2 3h-16a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6" />
                                            <path d="M9 17v1a3 3 0 0 0 6 0v-1" />
                                        </svg>
                                    </span>
                                </div>
                            )
                        }

                        <div class="relative w-20 h-fit cursor-pointer text-whitefont-medium rounded-md text-sm">
                            <span id="actual-flag" class="flex gap-x-2 justify-center items-center bg-blue-600 hover:bg-blue-700 focus:ring-4 focus:ring-blue-300 px-2 py-2 rounded-md" data-flag-now="es" data-flag-src="../../flags/espana.svg">
                                <img src="../../flags/espana.svg" class="w-6 h-6" alt="">
                                <span>
                                    <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="white"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-caret-down rotate-90 transition-all duration-300">
                                        <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                                        <path d="M6 10l6 6l6 -6h-12" />
                                    </svg>
                                </span>
                            </span>

                            <div id="list-flags" class="transition-all duration-300 flex cursor-pointer flex-col gap-x-2 w-full h-5 absolute mt-1 text-white bg-blue-700 focus:ring-blue-300 font-medium rounded-md text-sm dark:bg-blue-600 focus:outline-none dark:focus:ring-blue-800">
                                <div class="flex gap-x-2 justify-center items-center w-full px-2 py-2 bg-blue-600 hover:bg-blue-700 focus:ring-4 rounded-md" data-flag="en" data-flag-src="../../flags/usa.svg">
                                    <img src="../../flags/usa.svg" class="w-6 h-6" alt="">
                                    <svg  xmlns="http://www.w3.org/2000/svg"  width="20"  height="20"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-plus">
                                        <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                                        <path d="M12 5l0 14" />
                                        <path d="M5 12l14 0" />
                                    </svg>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </header>
        <Notifications length_notification={data_user ? data_user.user_notifications.length : 0}>
            {
                data_user ? (
                    data_user.user_notifications.map((item: any) => (
                        <Notification
                            tipo_notification = {item.tipo_notification}
                            origin = {item.origin}
                            action_notification = {item.action_notification}
                            state_notification = {item.state_notification}
                            fecha_notification = {item.fecha_notification}
                            message = {item.message}
                            id_notification={item.id_notification}
                        />
                    ))
                ):(
                <span></span>
                )
            }
        </Notifications>
        <Movements length_movement={data_user ? data_user.user_movements_complete.length : 0}>
            {
                data_user ? (
                    data_user.user_movements_complete.map((item: any) => (
                        <Movement
                            tipo_movement = {item.tipo_movement}
                            origin = {item.origin}
                            action_movement = {item.action_movement}
                            state_movement = {item.state_movement}
                            fecha_movement = {item.fecha_movement}
                            message = {item.message}
                            id_movement={item.id_movement}
                        />
                    ))
                ):(
                <span></span>
                )
            }
        </Movements>
        <Configurations isGoogle={isGoogle}></Configurations>
        
        <style>
            #content-header{
                grid-template-columns: 1fr 1fr;
                grid-template-rows: 1fr;
            }

            #list-flags{
                display: none;
            }

            header{
                z-index: 50;
                --tw-bg-opacity: .75;
                background-color: rgba(13, 17, 23, var(--tw-bg-opacity));
                border-bottom-width: 1px;
                --tw-border-opacity: 1;
                border-color: rgba(32, 38, 47, var(--tw-border-opacity));
                backdrop-filter:blur(3px);
                backface-visibility: hidden;
                perspective: 1000px;
                transform: translateZ(0px);
            }

            .initiated{
                display: flex;
            }

            .no_initiated{
                display: none;
            }
        </style>
    ):(
        <h1>{err}</h1>
    )
}