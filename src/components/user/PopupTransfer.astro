---
import PopupBase from "./PopupBase.astro"
---

<PopupBase 
    class="relative w-[30rem] -top-10 py-5 rounded-md z-10 bg-slate-700 mb-5" 
    id="popup-center" 
    class_content="hidden h-screen fixed" 
    id_inter_content="popup-inter-transfer"
    id_background="background-popup-transfer" 
    id_close="close-transfer"
    >
    <div class="p-5 border-b-[1px] mb-5">
        <h1 class="text-2xl font-bold text-white">Transferencia</h1>
    </div>

    <form id="form-transfer" class="px-5 pt-2">
        <label for="input-numero-identidad" class="block mb-2 ml-0 text-sm font-medium text-white relative">{"ID del Destino"}</label>
        <div class="relative mb-2.5">
            <div class="absolute inset-y-0 start-0 flex items-center ps-3.5 pointer-events-none">
                <svg  xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-id w-5 h-5 text-gray-500 dark:text-gray-400">
                    <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                    <path d="M3 4m0 3a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v10a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3z" />
                    <path d="M9 10m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
                    <path d="M15 8l2 0" />
                    <path d="M15 12l2 0" />
                    <path d="M7 16l10 0" />
                </svg>
            </div>
            <input type="number" id="input-numero-identidad-transfer" class="outline-none border text-white text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full ps-10 p-4  bg-slate-800 border-slate-800 placeholder-gray-400" placeholder={"ID del Destino"} required>
        </div>
        <span id="err-numero-identidad-transfer" class="relative text-sm mx-2 text-[tomato] transition-all duration-500 hidden">Prueba</span>

        <label for="input-action" class="block mb-2 mt-1.5 text-sm font-medium text-white relative">{"Monto de la transferencia"}</label>
        <div class="relative mb-2.5">
            <div class="absolute inset-y-0 start-0 flex items-center ps-3.5 pointer-events-none">
                <svg  xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-mail-dollar w-5 h-5 text-gray-500 dark:text-gray-400">
                    <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                    <path d="M13.5 19h-8.5a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v3.5" />
                    <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
                    <path d="M19 21v1m0 -8v1" />
                    <path d="M3 7l9 6l9 -6" />
                </svg>
            </div>
            <input type="number" id="input-action-transfer" class="outline-none border text-white text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full ps-10 p-4  bg-slate-800 border-slate-800 placeholder-gray-400" placeholder={"Monto de transferencia"} required>
        </div>
        <span id="err-action-transfer" class="relative text-sm mx-2 text-[tomato] transition-all duration-500 hidden">Prueba</span>

        <label for="message" class="block mb-2 mt-1.5 text-sm font-medium text-white relative">{"Descripcion de la transferencia"}</label>
        <div class="relative mb-2.5">
            <textarea id="input-message-transfer" class="max-h-[9rem] min-h-[5rem] outline-none border text-white text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block justify-center items-center w-full px-4 py-3  bg-slate-800 border-slate-800 placeholder-gray-400" placeholder={"Escribe la descripcion de la transferencia aqui..."}></textarea>
        </div>
        <span id="err-message-transfer" class="relative text-sm mx-2 text-[tomato] transition-all duration-500 hidden">Prueba</span>

        <div class="w-full flex justify-left items-center relative mt-1">
            <button id="submit-signup" type="submit" class="w-full max-w-[13rem] transition-all duration-300 text-black outline-none text-bold text-base bg-white hover:bg-whit hover:bg-black hover:text-white focus:ring-slate-800 focus:ring-4 font-medium rounded-lg px-5 py-3 text-center inline-flex items-center justify-center mb-2">
                {"Hacer Transferencia"}
            </button>
        </div>
    </form>
</PopupBase>

<script>

    let elements_transfer = {
        input_numero_identidad: document.querySelector("#input-numero-identidad-transfer"),
        input_action: document.querySelector("#input-action-transfer"),
        input_message: document.querySelector("#input-message-transfer"),
    }

    async function send_req_transfer(){
        let isContinueLoan = true;

        for(let key in elements_transfer){
            if(elements_transfer.hasOwnProperty(key)){
                let item = elements_transfer[key];
                console.log(item);
                let id = item.id.toString();
                let id_without_input = id.split("input")[1];
                let id_with_err = "err" + id_without_input;
                if(document.querySelector("#" + id_with_err)){
                    document.querySelector("#" + id_with_err).style.display = "none";
                    document.querySelector("#" + id_with_err).innerHTML = ""
                }
                item.style.borderColor = "transparent";
            }
        }

        if(parseFloat(elements_transfer.input_action.value) < 1000 || parseFloat(elements_transfer.input_action.value) > 4000000) {
            let id = elements_transfer.input_action.id.toString();
            let id_without_input = id.split("input")[1];
            let id_with_err = "err" + id_without_input;
            document.querySelector("#" + id_with_err).style.display = "initial";
            document.querySelector("#" + id_with_err).innerHTML = "* El monto debe ser menor a 4M y mayor a 1k."
            elements_transfer.input_action.style.borderColor = "tomato";
            isContinueLoan = false;
        }

        if(elements_transfer.input_message.value.length > 200){
            let id = elements_transfer.input_message.id.toString();
            let id_without_input = id.split("input")[1];
            let id_with_err = "err" + id_without_input;
            document.querySelector("#" + id_with_err).style.display = "initial";
            document.querySelector("#" + id_with_err).innerHTML = "* El numero maximo de caracteres es de 200 caracteres."
            elements_transfer.input_message.style.borderColor = "tomato";
            isContinueLoan = false;
        }

        if(!isContinueLoan){
            return null;
        }

        let email_user_origin = localStorage.getItem("W-I-D");

        let data = {
            numero_identidad: elements_transfer.input_numero_identidad.value,
            action: elements_transfer.input_action.value,
            message: elements_transfer.input_message.value,
            origin: email_user_origin,
        }

        let response_user_loan;
        let err;
        let isContinue = true;

        try{
            response_user_loan = await fetch("http://localhost:4000/user/transfer", {
                method: "POST",
                body: JSON.stringify(data),
                headers:{ 'Content-Type': 'application/json' }
            });

            let response_message = await response_user_loan.json();

            if(response_message.state === "Bad Request"){
                if(response_message.message === "Numero de Identificacion Invalido."){
                    let id = elements_transfer.input_numero_identidad.id.toString();
                    let id_without_input = id.split("input")[1];
                    let id_with_err = "err" + id_without_input;
                    document.querySelector("#" + id_with_err).style.display = "initial";
                    document.querySelector("#" + id_with_err).innerHTML = "* " + response_message.message
                    elements_transfer.input_numero_identidad.style.borderColor = "tomato";
                }
            }else{
                window.location.reload();
            }
        }catch(e){
            err = e;
            isContinue = !isContinue;
            console.log(err);
        }
        
        console.log(data);
    }

    document.querySelector("#form-transfer")?.addEventListener("submit", (event) =>{
        event.preventDefault();
        send_req_transfer();
    })
</script>