---
import PopupBase from "./PopupBase.astro";

interface Props{
    title_validate_email_text: string,
    description_validate_email_text: string,
    verify_email_text: string,
}

const {title_validate_email_text, description_validate_email_text, verify_email_text} = Astro.props;

---

<PopupBase 
    class="relative w-[30rem] -top-10 py-5 rounded-md z-10 bg-slate-700 mb-5" 
    id="popup-center-validate" 
    class_content="hidden h-screen fixed" 
    id_inter_content="popup-inter-validate"
    id_background="background-popup-validate" 
    id_close="close-validate"
    >
    <div class="p-5 border-b-[1px] mb-5">
        <h1 class="text-2xl font-bold text-white">{title_validate_email_text}</h1>
    </div>

    <div class="w-full flex px-5 mb-5 text-gray-300 font-semibold">
        <p>
            {description_validate_email_text}
        </p>
    </div>

    <form id="form-validate" class="px-5 pt-0">

        <div class="flex items-center justify-center gap-3 mb-2">
            <input
                type="text"
                id="validate_email_input"
                class="w-14 h-14 text-center text-2xl font-extrabold text-white focus:ring-blue-500 focus:border-blue-500 bg-slate-800 border border-transparent appearance-none rounded p-4 outline-none focus:ring-2"
                maxlength="1"
            />
            <input
                type="text"
                id="validate_email_input"
                class="w-14 h-14 text-center text-2xl font-extrabold text-white focus:ring-blue-500 focus:border-blue-500 bg-slate-800 border border-transparent appearance-none rounded p-4 outline-none focus:ring-2"
                maxlength="1"
            />
            <input
                type="text"
                id="validate_email_input"
                class="w-14 h-14 text-center text-2xl font-extrabold text-white focus:ring-blue-500 focus:border-blue-500 bg-slate-800 border border-transparent appearance-none rounded p-4 outline-none focus:ring-2"
                maxlength="1"
            />
            <input
                type="text"
                id="validate_email_input"
                class="w-14 h-14 text-center text-2xl font-extrabold text-white focus:ring-blue-500 focus:border-blue-500 bg-slate-800 border border-transparent appearance-none rounded p-4 outline-none focus:ring-2"
                maxlength="1"
            />
            <input
                type="text"
                id="validate_email_input"
                class="w-14 h-14 text-center text-2xl font-extrabold text-white focus:ring-blue-500 focus:border-blue-500 bg-slate-800 border border-transparent appearance-none rounded p-4 outline-none focus:ring-2"
                maxlength="1"
            />
            <input
                type="text"
                id="validate_email_input"
                class="w-14 h-14 text-center text-2xl font-extrabold text-white focus:ring-blue-500 focus:border-blue-500 bg-slate-800 border border-transparent appearance-none rounded p-4 outline-none focus:ring-2"
                maxlength="1"
            />
        </div>
        <span id="err-validate-code" class="relative text-sm mx-2 mt-5 ml-5 text-[tomato] transition-all duration-500 opacity-0"></span>

        <div class="w-full flex mt-5 px-5">
            <button type="submit" class="w-full transition-all duration-300 text-black outline-none text-bold text-base bg-white hover:bg-whit hover:bg-black hover:text-white focus:ring-slate-800 focus:ring-4 font-medium rounded-lg px-5 py-3 text-center inline-flex items-center justify-center mb-2">
                {verify_email_text}
            </button>
        </div>
    </form>
</PopupBase>


<script>
    document.querySelector("#background-popup-validate")?.addEventListener("click", () => {
        (document.querySelector("#popup-center-validate") as HTMLElement).style.display = "none";
    });
    
    document.querySelector("#close-validate")?.addEventListener("click", () => {
        (document.querySelector("#popup-center-validate") as HTMLElement).style.display = "none";
    });
    
    document.querySelector("#btn-validate")?.addEventListener("click", () =>{
        (document.querySelector("#popup-center-validate") as HTMLElement).style.display = "flex";
    });

    const form = document.getElementById('form-validate') as HTMLFormElement;
    const inputs = [...form.querySelectorAll('input[type=text]')] as HTMLInputElement[]
    const submit: HTMLButtonElement | null = form.querySelector('button[type=submit]')

    const handleKeyDown = (e: KeyboardEvent) => {
        if (
            !/^[0-9]{1}$/.test(e.key)
            && e.key !== 'Backspace'
            && e.key !== 'Delete'
            && e.key !== 'Tab'
            && !e.metaKey
        ) {
            e.preventDefault()
        }

        if (e.key === 'Delete' || e.key === 'Backspace') {
            const index = inputs.indexOf(e.target as HTMLInputElement);
            if (index > 0) {
                inputs[index - 1].value = '';
                inputs[index - 1].focus();
            }
        }
    }

    const handleInput = (e: Event) => {
        const target = e.target as HTMLInputElement;
        const index = inputs.indexOf(target)
        if (target.value) {
            if (index < inputs.length - 1) {
                inputs[index + 1].focus()
            } else {
                submit?.focus()
            }
        }
    }

    const handleFocus = (e: any) => {
        e.target?.select()
    }

    const handlePaste = (e: ClipboardEvent) => {
        e.preventDefault()
        const text = e.clipboardData?.getData('text')
        if (!new RegExp(`^[0-9]{${inputs.length}}$`).test(text as any)) {
            return
        }
        const digits = text?.split('') as any
        inputs.forEach((input: any, index: any) => input.value = digits[index])
        submit?.focus()
    }

    inputs.forEach((input) => {
        input.addEventListener('input', handleInput)
        input.addEventListener('keydown', handleKeyDown)
        input.addEventListener('focus', handleFocus)
        input.addEventListener('paste', handlePaste)
    })     
</script>