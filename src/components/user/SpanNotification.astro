---
    interface Props{
        message: string,
        class_toast: string,
    }

    const {message, class_toast} = Astro.props;
---

<div id="toast-success" class=`flex right-3 z-50 top-24 items-center w-full max-w-xs p-4 mb-4 rounded-lg shadow text-slate-300 bg-slate-700 ${class_toast}` role="alert">
    <div class="inline-flex items-center justify-center flex-shrink-0 w-8 h-8 rounded-lg bg-green-800 text-green-200">
        <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
            <path d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5Zm3.707 8.207-4 4a1 1 0 0 1-1.414 0l-2-2a1 1 0 0 1 1.414-1.414L9 10.586l3.293-3.293a1 1 0 0 1 1.414 1.414Z"/>
        </svg>
        <span class="sr-only">Check icon</span>
    </div>
    <div class="ms-3 text-sm font-normal">{message}</div>
    <button type="button" id="button-close-notifications" class="ms-auto -mx-1.5 -my-1.5 rounded-lg focus:ring-2 focus:ring-slate-300 p-1.5 inline-flex items-center justify-center h-8 w-8 text-slate-400 hover:text-white bg-slate-700 hover:bg-slate-800" data-dismiss-target="#toast-success" aria-label="Close">
        <span class="sr-only">Close</span>
        <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
        </svg>
    </button>
</div>

<script>
    const buttonCloseNotifications = document.getElementById('button-close-notifications');

    buttonCloseNotifications?.addEventListener('click', () => {
        document.querySelector("#toast-success")?.classList.remove("fixed");
        document.querySelector("#toast-success")?.classList.add("hidden");
    });
</script>

<style>
    #toast-success {
        animation: slide-up .5s ease-in;
    }

    @keyframes slide-up {
        0% {
            transform: translateX(100%);
        }
        100% {
            transform: translateX(0);
        }
    }
</style>