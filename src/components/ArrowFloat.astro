---
---

<span class="arrow-animation fixed bottom-3 z-40" {...Astro.props}>
    <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-square-chevrons-down-filled w-12 h-12 cursor-pointer text-[rgb(250,204,21)] hover:opacity-75"viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M19 2a3 3 0 0 1 3 3v14a3 3 0 0 1 -3 3h-14a3 3 0 0 1 -3 -3v-14a3 3 0 0 1 3 -3zm-9.387 10.21a1 1 0 0 0 -1.32 1.497l3 3l.094 .083a1 1 0 0 0 1.32 -.083l3 -3l.083 -.094a1 1 0 0 0 -.083 -1.32l-.094 -.083a1 1 0 0 0 -1.32 .083l-2.293 2.292l-2.293 -2.292zm0 -5a1 1 0 0 0 -1.32 1.497l3 3l.094 .083a1 1 0 0 0 1.32 -.083l3 -3l.083 -.094a1 1 0 0 0 -.083 -1.32l-.094 -.083a1 1 0 0 0 -1.32 .083l-2.293 2.292l-2.293 -2.292z" stroke-width="0" fill="currentColor" />
    </svg>
</span>

<script>

    let elementCenter = document.querySelector("#SectionCenter") as HTMLElement;
    let buttonFloat = document.querySelector("#ButtonFloat") as HTMLElement;

	buttonFloat?.addEventListener("click", () =>{
        elementCenter?.scrollIntoView({ behavior: 'smooth' });
	});

    const options = {
        root: null,
        threshold: 0.17,
    }

    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if(entry.isIntersecting){
                buttonFloat.style.display = "none";
            }else{
                buttonFloat.style.display = "initial";
            }
        });
    }, options);

    if(elementCenter){
        observer.observe(elementCenter);
    }
</script>


