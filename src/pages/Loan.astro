---
import Layout from "../layouts/Layout.astro"
import Header from "../components/Header.astro"
import Footer from "../components/Footer.astro"
import PopupLoan from "../components/user/PopupLoan.astro"

interface WordItem{
    word: string;
    es: string;
    en: string;
}

let response: Response;
let data: any;

let response_user_exist: Response;
let data_user_exist: any;

let text: any;
let err: any;

let isContinue = true;
let isGoogle = false;
let RegisterIncomplete = false;

import {getSession} from 'auth-astro/server';

const session = await getSession(Astro.request);

if(session){
    let response: Response;
    let data_response: any;
    isGoogle = true;

    try{
        response = await fetch("http://localhost:4000/auth/google", {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                email: session.user?.email,
                username: session.user?.name
            })
        });

        data_response = await response.json();
        console.log(data_response)

        if(data_response.status == "Good Request"){
            Astro.cookies.set("ID-USER", data_response.id, {expires: new Date("9999-12-31")});
            Astro.cookies.set("W-INIT-ENT", "true", {expires: new Date("9999-12-31")});
        }else if(data_response.status == "Good Request Incomplete"){
            // Astro.cookies.set("ID-USER", "false", {expires: new Date("9999-12-31")});
            // Astro.cookies.set("W-INIT-ENT", "false", {expires: new Date("9999-12-31")});
            Astro.cookies.set("ID-USER", data_response.id, {expires: new Date("9999-12-31")});
            Astro.cookies.set("W-INIT-ENT", "true", {expires: new Date("9999-12-31")});
            RegisterIncomplete = true;
        }
        else{
            isGoogle = false
        }

    }catch(e){
        isContinue = false
        err = e;
        Astro.cookies.set("ID-USER", "false", {expires: new Date("9999-12-31")});
        Astro.cookies.set("W-INIT-ENT", "false", {expires: new Date("9999-12-31")});
        return Astro.redirect("/")
    }

}

const flag = (Astro.cookies.get("flag") || {})?.value;
const initiated = (Astro.cookies.get("W-INIT-ENT") || {})?.value;
const id_user = (Astro.cookies.get("ID-USER") || {})?.value;

try{
    response = await fetch("http://localhost:4000/words");
    data = await response.json();

    if(initiated != "false"){
        response_user_exist = await fetch(`http://localhost:4000/user/exists?id_user=${id_user}`);
        data_user_exist = await response_user_exist.json();

        if(data_user_exist.state != "Good Request"){
            throw new Error("Error in the request to the server");
        }
    }else{
        throw new Error("Error in the request to the server");
    }

    text = {
    titulo_inicio: (data.find((item: { word: string }) => item.word === "titulo_inicio") || {})[flag === "es" ? 'es' : 'en'] as string,
    nombre_inicio: (data.find((item: { word: string }) => item.word === "nombre_inicio") || {})[flag === "es" ? 'es' : 'en'] as string,
    descripcion_inicio: (data.find((item: { word: string }) => item.word === "descripcion_inicio") || {})[flag === "es" ? 'es' : 'en'] as string,
    calcular_inicio: (data.find((item: { word: string }) => item.word === "calcular_inicio") || {})[flag === "es" ? 'es' : 'en'] as string,
    online_title: (data.find((item: { word: string }) => item.word === "article_1_titulo") || {})[flag === "es" ? 'es' : 'en'] as string,
    online_description: (data.find((item: { word: string }) => item.word === "article_1_description") || {})[flag === "es" ? 'es' : 'en'] as string,
    cuota_title: (data.find((item: { word: string }) => item.word === "article_2_titulo") || {})[flag === "es" ? 'es' : 'en'] as string,
    cuota_description: (data.find((item: { word: string }) => item.word === "article_2_description") || {})[flag === "es" ? 'es' : 'en'] as string,
    pay_title: (data.find((item: { word: string }) => item.word === "article_3_titulo") || {})[flag === "es" ? 'es' : 'en'] as string,
    pay_description: (data.find((item: { word: string }) => item.word === "article_3_description") || {})[flag === "es" ? 'es' : 'en'] as string,
    tasa_title: (data.find((item: { word: string }) => item.word === "article_4_titulo") || {})[flag === "es" ? 'es' : 'en'] as string,
    tasa_description: (data.find((item: { word: string }) => item.word === "article_4_description") || {})[flag === "es" ? 'es' : 'en'] as string,
    recursos_footer_titulo: (data.find((item: { word: string }) => item.word === "recursos_footer_titulo") || {})[flag === "es" ? 'es' : 'en'] as string,
    recursos_item_1: (data.find((item: { word: string }) => item.word === "recursos_item_1") || {})[flag === "es" ? 'es' : 'en'] as string,
    recursos_item_2: (data.find((item: { word: string }) => item.word === "recursos_item_2") || {})[flag === "es" ? 'es' : 'en'] as string,
    recursos_item_3: (data.find((item: { word: string }) => item.word === "recursos_item_3") || {})[flag === "es" ? 'es' : 'en'] as string,
    recursos_item_4: (data.find((item: { word: string }) => item.word === "recursos_item_4") || {})[flag === "es" ? 'es' : 'en'] as string,
    siganos_footer_titulo: (data.find((item: { word: string }) => item.word === "siganos_footer_titulo") || {})[flag === "es" ? 'es' : 'en'] as string,
    siganos_item_1: (data.find((item: { word: string }) => item.word === "siganos_item_1") || {})[flag === "es" ? 'es' : 'en'] as string,
    siganos_item_2: (data.find((item: { word: string }) => item.word === "siganos_item_2") || {})[flag === "es" ? 'es' : 'en'] as string,
    legal_footer_titulo: (data.find((item: { word: string }) => item.word === "legal_footer_titulo") || {})[flag === "es" ? 'es' : 'en'] as string,
    legal_item_1: (data.find((item: { word: string }) => item.word === "legal_item_1") || {})[flag === "es" ? 'es' : 'en'] as string,
    legal_item_2: (data.find((item: { word: string }) => item.word === "legal_item_2") || {})[flag === "es" ? 'es' : 'en'] as string,
    rights_footer: (data.find((item: { word: string }) => item.word === "rights_footer") || {})[flag === "es" ? 'es' : 'en'] as string,
    iniciar_text: (data.find((item: { word: string }) => item.word === "iniciar_text") || {})[flag === "es" ? 'es' : 'en'] as string,
    registrarse_text: (data.find((item: { word: string }) => item.word === "registrarse_text") || {})[flag === "es" ? 'es' : 'en'] as string,
    welcome_back_text: (data.find((item: { word: string }) => item.word === "welcome_back_text") || {})[flag === "es" ? 'es' : 'en'] as string,
    have_you_text: (data.find((item: { word: string }) => item.word === "have_you_text") || {})[flag === "es" ? 'es' : 'en'] as string,
    new_notifications_text: (data.find((item: { word: string }) => item.word === "new_notifications_text") || {})[flag === "es" ? 'es' : 'en'] as string,
    view_all_text: (data.find((item: { word: string }) => item.word === "view_all_text") || {})[flag === "es" ? 'es' : 'en'] as string,
    first_part_make_loan: (data.find((item: { word: string }) => item.word === "first_part_make_loan") || {})[flag === "es" ? 'es' : 'en'] as string,
    first_loan_text: (data.find((item: { word: string }) => item.word === "first_loan_text") || {})[flag === "es" ? 'es' : 'en'] as string,
    please_enter_text: (data.find((item: { word: string }) => item.word === "please_enter_text") || {})[flag === "es" ? 'es' : 'en'] as string,
    make_loan_text: (data.find((item: { word: string }) => item.word === "make_loan_text") || {})[flag === "es" ? 'es' : 'en'] as string,
    available_balance: (data.find((item: { word: string }) => item.word === "available_balance") || {})[flag === "es" ? 'es' : 'en'] as string,
    total_income_text: (data.find((item: { word: string }) => item.word === "total_income_text") || {})[flag === "es" ? 'es' : 'en'] as string,
    check_card_text: (data.find((item: { word: string }) => item.word === "check_card_text") || {})[flag === "es" ? 'es' : 'en'] as string,
    content_check_card_text: (data.find((item: { word: string }) => item.word === "content_check_card_text") || {})[flag === "es" ? 'es' : 'en'] as string,
    security_text: (data.find((item: { word: string }) => item.word === "security_text") || {})[flag === "es" ? 'es' : 'en'] as string,
    content_security_text: (data.find((item: { word: string }) => item.word === "content_security_text") || {})[flag === "es" ? 'es' : 'en'] as string,
    history_movements_text: (data.find((item: { word: string }) => item.word === "history_movements_text") || {})[flag === "es" ? 'es' : 'en'] as string,
    learn_more_text: (data.find((item: { word: string }) => item.word === "learn_more_text") || {})[flag === "es" ? 'es' : 'en'] as string,
    transferir_text: (data.find((item: { word: string }) => item.word === "transferir_text") || {})[flag === "es" ? 'es' : 'en'] as string,
    simulate_loan_text: (data.find((item: { word: string }) => item.word === "simulate_loan_text") || {})[flag === "es" ? 'es' : 'en'] as string,
    more_text: (data.find((item: { word: string }) => item.word === "more_text") || {})[flag === "es" ? 'es' : 'en'] as string,
    not_found_text: (data.find((item: { word: string }) => item.word === "not_found_text") || {})[flag === "es" ? 'es' : 'en'] as string,
    text_information_loan: (data.find((item: { word: string }) => item.word === "text_information_loan") || {})[flag === "es" ? 'es' : 'en'] as string,
    text_information_personal: (data.find((item: { word: string }) => item.word === "text_information_personal") || {})[flag === "es" ? 'es' : 'en'] as string,
    type_loan: (data.find((item: { word: string }) => item.word === "type_loan") || {})[flag === "es" ? 'es' : 'en'] as string,
    text_finish_loan: (data.find((item: { word: string }) => item.word === "text_finish_loan") || {})[flag === "es" ? 'es' : 'en'] as string,
    text_confirm: (data.find((item: { word: string }) => item.word === "text_confirm") || {})[flag === "es" ? 'es' : 'en'] as string,
    text_simulate: (data.find((item: { word: string }) => item.word === "text_simulate") || {})[flag === "es" ? 'es' : 'en'] as string,
    text_amount_loan: (data.find((item: { word: string }) => item.word === "text_amount_loan") || {})[flag === "es" ? 'es' : 'en'] as string,
    text_tasa_loan: (data.find((item: { word: string }) => item.word === "text_tasa_loan") || {})[flag === "es" ? 'es' : 'en'] as string,
    text_cuotas: (data.find((item: { word: string }) => item.word === "text_cuotas") || {})[flag === "es" ? 'es' : 'en'] as string,
    text_frecuencia: (data.find((item: { word: string }) => item.word === "text_frecuencia") || {})[flag === "es" ? 'es' : 'en'] as string,
    text_name_complete: (data.find((item: { word: string }) => item.word === "text_name_complete") || {})[flag === "es" ? 'es' : 'en'] as string,
    email_text: (data.find((item: { word: string }) => item.word === "email_text") || {})[flag === "es" ? 'es' : 'en'] as string,
    id_number_text: (data.find((item: { word: string }) => item.word === "id_number_text") || {})[flag === "es" ? 'es' : 'en'] as string,
    phone_text: (data.find((item: { word: string }) => item.word === "phone_text") || {})[flag === "es" ? 'es' : 'en'] as string,
    text_tasa_fija: (data.find((item: { word: string }) => item.word === "text_tasa_fija") || {})[flag === "es" ? 'es' : 'en'] as string,
    text_tasa_variable: (data.find((item: { word: string }) => item.word === "text_tasa_variable") || {})[flag === "es" ? 'es' : 'en'] as string,
    text_select_cuotas: (data.find((item: { word: string }) => item.word === "text_select_cuotas") || {})[flag === "es" ? 'es' : 'en'] as string,
    text_select_frecuencia: (data.find((item: { word: string }) => item.word === "text_select_frecuencia") || {})[flag === "es" ? 'es' : 'en'] as string,
};
}catch(e){
    isContinue = false;
    Astro.cookies.set("ID-USER", "false", {expires: new Date("9999-12-31")});
    Astro.cookies.set("W-INIT-ENT", "false", {expires: new Date("9999-12-31")});
    return Astro.redirect("/")
}

---

<Layout title="Sebxstt - Inicio">
    <Header
        href_image="/"
        href_signin="./SignIn"
        href_signup="./SignUp"
        registrarse_text={text.registrarse_text || "Registrarse"}
        iniciar_text={text.iniciar_text || "Iniciar sesión"}
        isGoogle={isGoogle}
    ></Header>
    <PopupLoan
        text_information_loan={text.text_information_loan}
        text_information_personal={text.text_information_personal}
        type_loan={text.type_loan}
        text_finish_loan={text.text_finish_loan}
        text_confirm={text.text_confirm}
        text_simulate={text.text_simulate}
        text_amount_loan={text.text_amount_loan}
        text_tasa_loan={text.text_tasa_loan}
        text_cuotas={text.text_cuotas}
        text_frecuencia={text.text_frecuencia}
        text_name_complete={text.text_name_complete}
        email_text={text.email_text}
        id_number_text={text.id_number_text}
        phone_text={text.phone_text}
        text_tasa_fija={text.text_tasa_fija}
        text_tasa_variable={text.text_tasa_variable}
        text_select_cuotas={text.text_select_cuotas}
        text_select_frecuencia={text.text_select_frecuencia}
    ></PopupLoan>
    <Footer
        recursos_footer_titulo={text.recursos_footer_titulo}
        recursos_item_1={text.recursos_item_1}
        recursos_item_2={text.recursos_item_2}
        recursos_item_3={text.recursos_item_3}
        recursos_item_4={text.recursos_item_4}
        siganos_footer_titulo={text.siganos_footer_titulo}
        siganos_item_1={text.siganos_item_1}
        siganos_item_2={text.siganos_item_2}
        legal_footer_titulo={text.legal_footer_titulo}
        legal_item_1={text.legal_item_1}
        legal_item_2={text.legal_item_2}
        rights_footer={text.rights_footer}
    ></Footer>
</Layout>
